name: CI/CD

on:
  pull_request:
  push:

permissions:
  actions: write
  checks: write
  discussions: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -Dwarnings

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: "github.ref == 'refs/heads/main'"
    steps:
      - uses: actions/checkout@v3

      - id: "auth"
        name: Authentication with GCP
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_DEPLOY_CREDENTIALS }}"
          token_format: "access_token"

      - name: Authenticate with GCR
        uses: "docker/login-action@v1"
        with:
          registry: "gcr.io"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: gcr.io/${{ vars.GCP_PROJECT }}/birthday-checker:latest,gcr.io/${{ vars.GCP_PROJECT }}/birthday-checker:pipeline-${{ github.run_id }}

      - name: Deploy new cloudrun revision
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: "${{ vars.CLOUD_RUN_SERVICE }}"
          image: gcr.io/${{ vars.GCP_PROJECT }}/birthday-checker:latest
          region: "${{ vars.REGION }}"
          project_id: "${{ vars.GCP_PROJECT }}"

  verify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Authentication with GCP
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_DEPLOY_CREDENTIALS }}"
          token_format: "access_token"

      - name: Verify service responds
        run: |
          gcloud config set run/region ${{ vars.REGION }};
          APP_URL=$(gcloud run services describe birthday-checker --format="value(status.url)");

          PUT_RESULT=$(curl -X put -s -o /dev/null -w "%{http_code}" \
            $APP_URL/hello/VerificationTest \
            -H 'Content-Type: application/json' \
            -d '{"dateOfBirth":"1555-05-05"}');
          echo "PUT $APP_URL/hello/VerificationTest $PUT_RESULT";
          [ "$PUT_RESULT" -eq "204" ];

          GET_RESULT=$(curl -s -o /dev/null -w "%{http_code}" \
            $APP_URL/hello/VerificationTest);
          echo "GET $APP_URL/hello/VerificationTest $GET_RESULT";
          [ "$GET_RESULT" -eq "200" ];
